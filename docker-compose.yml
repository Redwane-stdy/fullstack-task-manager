
services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: task_manager_db
    environment:
      POSTGRES_DB: taskmanager
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  # Backend API Node.js
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: task_manager_api
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: taskmanager
      DB_USER: admin
      DB_PASSWORD: password123
      JWT_SECRET: your_super_secret_jwt_key_change_in_production
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - app-network
    command: npm run dev

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task_manager_frontend
    environment:
      - VITE_API_URL=http://localhost:5000/api
    ports:
      - "3000:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network
    command: npm run dev

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge